'''
author: zyx
date: 2025-03-31
last modified: 2025-03-31
description: 
    Extract a mask from mask.npy files generated by cellpose gui segmentation
'''
import numpy as np
import argparse
from typing import Optional

def maskExtract(file_path: str, output_path: str) -> Optional[np.ndarray]:
    '''
    Extract a mask from mask.npy files generated by cellpose GUI segmentation
    
    Parameters
    ----------
    file_path : str
        Path to the cellpose mask.npy file
    output_path : str
        Path to save the extracted mask
        
    Returns
    -------
    numpy.ndarray or None
        The extracted mask, or None if extraction failed
    '''
    try:
        original_data = np.load(file_path, allow_pickle=True).item()
        mask = original_data['masks']
        np.save(output_path, mask)
        print(f"Extracted mask saved to {output_path}")
        return mask
    except Exception as e:
        print(f"Error extracting mask: {e}")
        return None

def arguments_parser():
    '''Parse command line arguments for the maskExtract function'''
    parser = argparse.ArgumentParser(description='Extract mask from cellpose segmentation output')
    parser.add_argument('--file_path', type=str, required=True, help='Path to the mask.npy file')
    parser.add_argument('--output_path', type=str, required=True, help='Path to save the extracted mask')
    return parser.parse_args()

if __name__ == "__main__":
    args = arguments_parser()
    maskExtract(file_path=args.file_path,
                output_path=args.output_path)